{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","hooks/useLocalStorage.js","index.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","submit","useState","name","setName","number","setNumber","handleChange","e","target","value","resetForm","className","s","container","onSubmit","preventDefault","newContact","id","shortid","form","type","pattern","title","required","onChange","button","Filter","change","ContactList","contacts","onDeleteContact","list","map","item","text","onClick","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","dataBaseContacts","setContacts","filter","setFilter","displayContacts","useMemo","contact","toLowerCase","includes","contactic","some","alert","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8207fbfc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1tjTd\"};","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ submit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmint = e => {\n    e.preventDefault();\n    const newContact = {\n      id: shortid(),\n      name,\n      number,\n    };\n    submit(newContact);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  // const { name, number } = this.state;\n  return (\n    <div className={s.container}>\n      <form onSubmit={handleSubmint} className={s.form}>\n        <h3>Name</h3>\n        <label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <h3>Number</h3>\n        <label>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n}\n\nContactForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, change }) => {\n  return (\n    <div className={s.container}>\n      <h3>Finde contacts by name</h3>\n      <label>\n        <input type=\"text\" name=\"filter\" value={value} onChange={change} />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  change: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <div className={s.container}>\n    <ul className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <p className={s.text}>\n            {name}:<span className={s.number}>{number}</span>\n          </p>\n          <button\n            type=\"button\"\n            className={s.button}\n            onClick={() => onDeleteContact(id)}\n          >\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import { useState, useMemo } from 'react';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport useLocalStorage from './hooks/useLocalStorage';\nimport dataBaseContacts from './data/contacts.json';\n\nfunction App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', dataBaseContacts);\n  const [filter, setFilter] = useState('');\n\n  const formSubmitHandler = contactic => {\n    // console.log(contact);\n\n    const check = contacts.some(\n      contact => contact.name.toLowerCase() === contactic.name.toLowerCase(),\n    );\n\n    check\n      ? alert(`${contactic.name} is already in contacts`)\n      : setContacts(contacts => [...contacts, contactic]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const displayContacts = useMemo(() => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  }, [contacts, filter]);\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm submit={formSubmitHandler} />\n\n      <h2>Contacts</h2>\n      <Filter filter={filter} change={changeFilter} />\n      <ContactList contacts={displayContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__1kFvf\",\"title\":\"ContactList_title__1fc8d\",\"list\":\"ContactList_list__Si8yV\",\"item\":\"ContactList_item__1IL3T\",\"text\":\"ContactList_text__1Tg-I\",\"number\":\"ContactList_number__u_i72\",\"button\":\"ContactList_button__2WbHn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__r7XFh\",\"form\":\"ContactForm_form__332Ip\",\"title\":\"ContactForm_title__JxwoG\",\"list\":\"ContactForm_list__2S9uZ\",\"item\":\"ContactForm_item__3mc4B\",\"text\":\"ContactForm_text__1Xk7U\",\"number\":\"ContactForm_number__1AlMP\",\"button\":\"ContactForm_button__1o7_o\"};"],"sourceRoot":""}